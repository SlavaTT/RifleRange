using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;

//--------------------------------------------------------------------------------
//-- Generated By: Slava
//-- Date Generated: 05/13/2017
//--------------------------------------------------------------------------------
namespace RifleRange.DAL
{
    public class rrForumThread
    {
        [SqlField]
        public int ThreadId { get; set; }
        [SqlField]
        public int ForumId { get; set; }
        [SqlField]
        public int? ThreadParentId { get; set; }
        [SqlField]
        public string Title { get; set; }
        [SqlField]
        public string Description { get; set; }
        [SqlField]
        public string FileName { get; set; }
        [SqlField]
        public int CreatedBy { get; set; }
        [SqlField]
        public DateTime CreateDate { get; set; }
        [SqlField]
        public DateTime? LastUpdate { get; set; }
        [SqlField]
        public int? LastUpdatedBy { get; set; }
        [SqlField]
        public string CreatedByName { get; set; }
        [SqlField]
        public string LastUpdatedByName { get; set; }

        static rrForumThread()
        {
            RecordMapper.Register(typeof(rrForumThread), typeof(SqlField));
        }
        public rrForumThread(SqlDataReader reader)
        {
            RecordMapper.ReadObject(this, reader);
        }
    }

    public class rrForumThreadDB
    {
        public const int ForumId = 2;

        public static LinkedList<rrForumThread> GetForumThread(int ForumId, int? ThreadId = null, 
            int? StartThreadId = null, bool IncludeStartThread = true)
        {
            LinkedList<rrForumThread> result = new LinkedList<rrForumThread>();
            using (SqlConnection conn = new SqlConnection(SQL.RifleRange))
            {
                try
                {
                    SqlCommand cmd = new SqlCommand("dbo.usp_GetForumThread", conn);
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.AddWithValue("@ForumId", ForumId);
                    if (ThreadId != null) cmd.Parameters.AddWithValue("@ThreadId", ThreadId);
                    if (StartThreadId != null) cmd.Parameters.AddWithValue("@StartThreadId", StartThreadId);
                    cmd.Parameters.AddWithValue("@IncludeStartThread", IncludeStartThread);
                    conn.Open();
                    SqlDataReader reader = cmd.ExecuteReader();
                    if (reader != null && !reader.IsClosed)
                    {
                        result = new LinkedList<rrForumThread>();
                        while (reader.Read())
                        {
                            rrForumThread obj = new rrForumThread(reader);
                            result.AddLast(obj);
                        }
                        reader.Close();
                    }

                }
                catch (Exception ex)
                {
                    throw new Exception(ex.Message, ex);
                }
            }
            return result;
        }

        public static void DeleteForumThread(int ForumId, int ThreadId)
        {
            using (SqlConnection conn = new SqlConnection(SQL.RifleRange))
            {
                try
                {
                    SqlCommand cmd = new SqlCommand("dbo.usp_DeleteForumThread", conn);
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.AddWithValue("@ForumId", ForumId);
                    cmd.Parameters.AddWithValue("@ThreadId", ThreadId);
                    conn.Open();
                    cmd.ExecuteNonQuery();

                }
                catch (Exception ex)
                {
                    throw new Exception(ex.Message, ex);
                }
            }
        }

        public static void UpdateForumThread(int ForumId, int UserId, int ThreadId,
            string Title, string Description = null, string FileName = null)
        {
            using (SqlConnection conn = new SqlConnection(SQL.RifleRange))
            {
                try
                {
                    SqlCommand cmd = new SqlCommand("dbo.usp_UpdateForumThread", conn);
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.AddWithValue("@ForumId", ForumId);
                    cmd.Parameters.AddWithValue("@UserId", UserId);
                    cmd.Parameters.AddWithValue("@ThreadId", ThreadId);
                    cmd.Parameters.AddWithValue("@Title", Title);
                    if (Description != null) cmd.Parameters.AddWithValue("@Description", Description);
                    if (FileName != null) cmd.Parameters.AddWithValue("@FileName", FileName);
                    conn.Open();
                    cmd.ExecuteNonQuery();

                }
                catch (Exception ex)
                {
                    throw new Exception(ex.Message, ex);
                }
            }
        }

        public static int InsertForumThread(int ForumId, int UserId, string Title,
            int? ThreadParentId = null, string Description = null, string FileName = null)
        {
            int result = 0;
            using (SqlConnection conn = new SqlConnection(SQL.RifleRange))
            {
                try
                {
                    SqlCommand cmd = new SqlCommand("dbo.usp_InsertForumThread", conn);
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.AddWithValue("@ForumId", ForumId);
                    cmd.Parameters.AddWithValue("@UserId", UserId);
                    cmd.Parameters.AddWithValue("@Title", Title);
                    if (ThreadParentId != null) cmd.Parameters.AddWithValue("@ThreadParentId", ThreadParentId);
                    if (Description != null) cmd.Parameters.AddWithValue("@Description", Description);
                    if (FileName != null) cmd.Parameters.AddWithValue("@FileName", FileName);
                    SqlParameter NewThreadId = new SqlParameter("@NewThreadId", SqlDbType.Int, 4);
                    NewThreadId.Direction = ParameterDirection.Output;
                    cmd.Parameters.Add(NewThreadId);
                    conn.Open();
                    cmd.ExecuteNonQuery();
                    result = (int)NewThreadId.Value;
                }
                catch (Exception ex)
                {
                    throw new Exception(ex.Message, ex);
                }
            }
            return result;
        }
        public static int InsertForumThreadReply(int UserId, int ThreadParentId, 
            string Description = null)
        {
            int result = 0;
            using (SqlConnection conn = new SqlConnection(SQL.RifleRange))
            {
                try
                {
                    SqlCommand cmd = new SqlCommand("dbo.usp_InsertForumThreadReply", conn);
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.AddWithValue("@UserId", UserId);
                    cmd.Parameters.AddWithValue("@ThreadParentId", ThreadParentId);
                    if (Description != null) cmd.Parameters.AddWithValue("@Description", Description);
                    SqlParameter NewThreadId = new SqlParameter("@NewThreadId", SqlDbType.Int, 4);
                    NewThreadId.Direction = ParameterDirection.Output;
                    cmd.Parameters.Add(NewThreadId);
                    conn.Open();
                    cmd.ExecuteNonQuery();
                    result = (int)NewThreadId.Value;
                }
                catch (Exception ex)
                {
                    throw new Exception(ex.Message, ex);
                }
            }
            return result;
        }
        public static LinkedList<rrForumThread> GetForumTopThread(int ForumId)
        {
            LinkedList<rrForumThread> result = new LinkedList<rrForumThread>();
            using (SqlConnection conn = new SqlConnection(SQL.RifleRange))
            {
                try
                {
                    SqlCommand cmd = new SqlCommand("dbo.usp_GetForumTopThread", conn);
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.AddWithValue("@ForumId", ForumId);
                    conn.Open();
                    SqlDataReader reader = cmd.ExecuteReader();
                    if (reader != null && !reader.IsClosed)
                    {
                        result = new LinkedList<rrForumThread>();
                        while (reader.Read())
                        {
                            rrForumThread obj = new rrForumThread(reader);
                            result.AddLast(obj);
                        }
                        reader.Close();
                    }

                }
                catch (Exception ex)
                {
                    throw new Exception(ex.Message, ex);
                }
            }
            return result;
        }

    }

}

